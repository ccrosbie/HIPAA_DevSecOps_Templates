{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Description": "Crosbie's DevSecOps Example: Shows an example of a template used in a fictious HIPAA example",
  "Parameters": {
    "DeveloperUserScript":
    {
      "Description": "Provide URL to AWS CodeCommit repository",
      "Type": "String",
      "ConstraintDescription": "Provide URL to AWS CodeCommit repository"
    },
    "KeyName": {
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to TEST instance or Admin SSH access to Prod instance",
      "Type": "AWS::EC2::KeyPair::KeyName",
       "MinLength": 1,
      "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
    },
    "PHI":
    {
      "Description": "Will this instance need to store Protected Health Information?",
      "Default": "YES",
      "Type": "String",
       "AllowedValues": [
        "YES",
        "NO"
      ]
    },
    "Enviroment":
    {
      "Description": "Please specify the target enviroment",
      "Default": "TEST",
      "Type": "String",
       "AllowedValues": [
        "TEST",
        "PROD"
      ]
    },
    "InstanceOwnerEmail":
    {
      "Description": "Please enter the E-mail address of the developer taking responsblity for this server",
      "Default": "@mycompany.com",
      "Type": "String"
    },
    "FriendlyName":
    {
      "Description": "Please enter a friendly name for the server",
      "Type": "String",
      "MinLength": 3,
      "ConstraintDescription": "must enter a friendy name for the server containing at least three characters."
    },
    "InstanceType": {
      "Description": "EC2 dedicated instance type - limited to instances that offer encrpted volumes",
      "Type": "String",
      "Default": "m3.medium",
      "AllowedValues": [
        "m3.medium",
        "m3.large",
        "m3.xlarge",
        "m3.2xlarge",
        "m4.large",
        "m4.xlarge",
        "m4.2xlarge",
        "m4.4xlarge",
        "m4.10xlarge",
        "c4.large",
        "c4.xlarge",
        "c4.2xlarge",
        "c4.4xlarge",
        "c4.8xlarge",
        "c3.large",
        "c3.xlarge",
        "c3.2xlarge",
        "c3.4xlarge",
        "c3.8xlarge",
        "cr1.8xlarge",
        "r3.large",
        "r3.xlarge",
        "r3.2xlarge",
        "r3.4xlarge",
        "r3.8xlarge",
        "d2.xlarge",
        "d2.2xlarge",
        "d2.4xlarge",
        "d2.8xlarge",
        "i2.xlarge",
        "i2.2xlarge",
        "i2.4xlarge",
        "i2.8xlarge",
        "g2.2xlarge",
        "g2.8xlarge"
      ],
      "ConstraintDescription": "must be a valid EC2 instance type that offers encrpted volumes."
    }
  },
  "Conditions" : {
    "CreatePRODResources" : {"Fn::Equals" : [{"Ref" : "Enviroment"}, "PROD"]},
    "CreateTESTResources" : {"Fn::Equals" : [{"Ref" : "Enviroment"}, "TEST"]},
    "ContainsPHI" : {"Fn::Equals" : [{"Ref" : "PHI"}, "YES"]}
  },
  "Mappings": {
    "AWSInstanceType2Arch": {
      "t1.micro": {
        "Arch": "PV64"
      },
      "t2.micro": {
        "Arch": "HVM64"
      },
      "t2.small": {
        "Arch": "HVM64"
      },
      "t2.medium": {
        "Arch": "HVM64"
      },
      "m1.small": {
        "Arch": "PV64"
      },
      "m1.medium": {
        "Arch": "PV64"
      },
      "m1.large": {
        "Arch": "PV64"
      },
      "m1.xlarge": {
        "Arch": "PV64"
      },
      "m2.xlarge": {
        "Arch": "PV64"
      },
      "m2.2xlarge": {
        "Arch": "PV64"
      },
      "m2.4xlarge": {
        "Arch": "PV64"
      },
      "m3.medium": {
        "Arch": "HVM64"
      },
      "m3.large": {
        "Arch": "HVM64"
      },
      "m3.xlarge": {
        "Arch": "HVM64"
      },
      "m3.2xlarge": {
        "Arch": "HVM64"
      },
      "c1.medium": {
        "Arch": "PV64"
      },
      "c1.xlarge": {
        "Arch": "PV64"
      },
      "c3.large": {
        "Arch": "HVM64"
      },
      "c3.xlarge": {
        "Arch": "HVM64"
      },
      "c3.2xlarge": {
        "Arch": "HVM64"
      },
      "c3.4xlarge": {
        "Arch": "HVM64"
      },
      "c3.8xlarge": {
        "Arch": "HVM64"
      },
      "c4.large": {
        "Arch": "HVM64"
      },
      "c4.xlarge": {
        "Arch": "HVM64"
      },
      "c4.2xlarge": {
        "Arch": "HVM64"
      },
      "c4.4xlarge": {
        "Arch": "HVM64"
      },
      "c4.8xlarge": {
        "Arch": "HVM64"
      },
      "g2.2xlarge": {
        "Arch": "HVMG2"
      },
      "r3.large": {
        "Arch": "HVM64"
      },
      "r3.xlarge": {
        "Arch": "HVM64"
      },
      "r3.2xlarge": {
        "Arch": "HVM64"
      },
      "r3.4xlarge": {
        "Arch": "HVM64"
      },
      "r3.8xlarge": {
        "Arch": "HVM64"
      },
      "i2.xlarge": {
        "Arch": "HVM64"
      },
      "i2.2xlarge": {
        "Arch": "HVM64"
      },
      "i2.4xlarge": {
        "Arch": "HVM64"
      },
      "i2.8xlarge": {
        "Arch": "HVM64"
      },
      "d2.xlarge": {
        "Arch": "HVM64"
      },
      "d2.2xlarge": {
        "Arch": "HVM64"
      },
      "d2.4xlarge": {
        "Arch": "HVM64"
      },
      "d2.8xlarge": {
        "Arch": "HVM64"
      },
      "hi1.4xlarge": {
        "Arch": "HVM64"
      },
      "hs1.8xlarge": {
        "Arch": "HVM64"
      },
      "cr1.8xlarge": {
        "Arch": "HVM64"
      },
      "cc2.8xlarge": {
        "Arch": "HVM64"
      }
    },
    "AWSInstanceType2NATArch": {
      "t1.micro": {
        "Arch": "NATPV64"
      },
      "t2.micro": {
        "Arch": "NATHVM64"
      },
      "t2.small": {
        "Arch": "NATHVM64"
      },
      "t2.medium": {
        "Arch": "NATHVM64"
      },
      "m1.small": {
        "Arch": "NATPV64"
      },
      "m1.medium": {
        "Arch": "NATPV64"
      },
      "m1.large": {
        "Arch": "NATPV64"
      },
      "m1.xlarge": {
        "Arch": "NATPV64"
      },
      "m2.xlarge": {
        "Arch": "NATPV64"
      },
      "m2.2xlarge": {
        "Arch": "NATPV64"
      },
      "m2.4xlarge": {
        "Arch": "NATPV64"
      },
      "m3.medium": {
        "Arch": "NATHVM64"
      },
      "m3.large": {
        "Arch": "NATHVM64"
      },
      "m3.xlarge": {
        "Arch": "NATHVM64"
      },
      "m3.2xlarge": {
        "Arch": "NATHVM64"
      },
      "c1.medium": {
        "Arch": "NATPV64"
      },
      "c1.xlarge": {
        "Arch": "NATPV64"
      },
      "c3.large": {
        "Arch": "NATHVM64"
      },
      "c3.xlarge": {
        "Arch": "NATHVM64"
      },
      "c3.2xlarge": {
        "Arch": "NATHVM64"
      },
      "c3.4xlarge": {
        "Arch": "NATHVM64"
      },
      "c3.8xlarge": {
        "Arch": "NATHVM64"
      },
      "c4.large": {
        "Arch": "NATHVM64"
      },
      "c4.xlarge": {
        "Arch": "NATHVM64"
      },
      "c4.2xlarge": {
        "Arch": "NATHVM64"
      },
      "c4.4xlarge": {
        "Arch": "NATHVM64"
      },
      "c4.8xlarge": {
        "Arch": "NATHVM64"
      },
      "g2.2xlarge": {
        "Arch": "NATHVMG2"
      },
      "r3.large": {
        "Arch": "NATHVM64"
      },
      "r3.xlarge": {
        "Arch": "NATHVM64"
      },
      "r3.2xlarge": {
        "Arch": "NATHVM64"
      },
      "r3.4xlarge": {
        "Arch": "NATHVM64"
      },
      "r3.8xlarge": {
        "Arch": "NATHVM64"
      },
      "i2.xlarge": {
        "Arch": "NATHVM64"
      },
      "i2.2xlarge": {
        "Arch": "NATHVM64"
      },
      "i2.4xlarge": {
        "Arch": "NATHVM64"
      },
      "i2.8xlarge": {
        "Arch": "NATHVM64"
      },
      "d2.xlarge": {
        "Arch": "NATHVM64"
      },
      "d2.2xlarge": {
        "Arch": "NATHVM64"
      },
      "d2.4xlarge": {
        "Arch": "NATHVM64"
      },
      "d2.8xlarge": {
        "Arch": "NATHVM64"
      },
      "hi1.4xlarge": {
        "Arch": "NATHVM64"
      },
      "hs1.8xlarge": {
        "Arch": "NATHVM64"
      },
      "cr1.8xlarge": {
        "Arch": "NATHVM64"
      },
      "cc2.8xlarge": {
        "Arch": "NATHVM64"
      }
    },
    "AWSRegionArch2AMI": {
      "us-east-1": {
        "PV64": "ami-5fb8c835",
        "HVM64": "ami-60b6c60a",
        "HVMG2": "ami-e998ea83"
      },
      "us-west-2": {
        "PV64": "ami-d93622b8",
        "HVM64": "ami-f0091d91",
        "HVMG2": "ami-315f4850"
      },
      "us-west-1": {
        "PV64": "ami-56ea8636",
        "HVM64": "ami-d5ea86b5",
        "HVMG2": "ami-943956f4"
      },
      "eu-west-1": {
        "PV64": "ami-95e33ce6",
        "HVM64": "ami-bff32ccc",
        "HVMG2": "ami-83fd23f0"
      },
      "eu-central-1": {
        "PV64": "ami-794a5915",
        "HVM64": "ami-bc5b48d0",
        "HVMG2": "ami-ba1a09d6"
      },
      "ap-northeast-1": {
        "PV64": "ami-393c1957",
        "HVM64": "ami-383c1956",
        "HVMG2": "ami-08e5c166"
      },
      "ap-southeast-1": {
        "PV64": "ami-34bd7a57",
        "HVM64": "ami-c9b572aa",
        "HVMG2": "ami-5a15d239"
      },
      "ap-southeast-2": {
        "PV64": "ami-ced887ad",
        "HVM64": "ami-48d38c2b",
        "HVMG2": "ami-0c1a446f"
      },
      "sa-east-1": {
        "PV64": "ami-7d15ad11",
        "HVM64": "ami-6817af04",
        "HVMG2": "NOT_SUPPORTED"
      },
      "cn-north-1": {
        "PV64": "ami-18ac6575",
        "HVM64": "ami-43a36a2e",
        "HVMG2": "NOT_SUPPORTED"
      }
    }
  },
  "Resources": {

    "HIPAAWebRole": 
    {
         "Type": "AWS::IAM::Role",
         "Properties": 
         {
            "AssumeRolePolicyDocument": 
            {
               "Version" : "2012-10-17",
               "Statement": 
               [ {
                "Effect": "Allow",
                 "Principal": 
                  {
                     "Service": [ "ec2.amazonaws.com" ]
                  },
                  "Action": [ "sts:AssumeRole" ]
                } ]
            },
            "Path": "/",
            "ManagedPolicyArns": ["arn:aws:iam::aws:policy/AWSCodeCommitReadOnly", "arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"]
        }
    },
    "HIPAAWebInstanceProfile": 
    {
        "Type": "AWS::IAM::InstanceProfile",
        "Properties": 
        {
           "Path": "/",
           "Roles": [ { "Ref": "HIPAAWebRole" } ]
        }
    },


    "EC2Instance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {

      "Monitoring": "true",

      "IamInstanceProfile": {"Ref": "HIPAAWebInstanceProfile"},
        
      "Tags":[ 
        { "Key" : "PHI", "Value" : {"Ref": "PHI"} },
        { "Key" : "Name", "Value" : {"Ref": "FriendlyName"} },
        { "Key" : "Enviroment", "Value" : {"Ref": "Enviroment"} },
        { "Key" : "InstanceOwnerEmail", "Value" : {"Ref": "InstanceOwnerEmail"} } 
      ],

      "Tenancy" : "dedicated",

        "BlockDeviceMappings" : [
               {
                  "DeviceName" : "/dev/sdm",
                  "Ebs" : {
                     "VolumeType" : "io1",
                     "Iops" : "200",
                     "DeleteOnTermination" : "false",
                     "VolumeSize" : "10",
                     "Encrypted": {
                        "Fn::If" : [
                          "ContainsPHI",
                          "true",
                          "false"
                        ]
                     }
                  }
               },
               {
                  "DeviceName" : "/dev/sdk",
                  "NoDevice" : {}
               }
            ],

        "InstanceType": {
          "Ref": "InstanceType"
        },

      "KeyName": {
          "Ref": "KeyName"
        },

      "UserData" : 
      { "Fn::Base64" : 
        { "Fn::Join" : 
          [ 
            "",
            [
            "#!/bin/bash\n",
            "yum update -y\n",
            "yum install -y awslogs git httpd mod_ssl\n", 
            "service awslogs start\n",
            "chkconfig awslogs on\n",
            "wget https://crosbie-training-materials.s3.amazonaws.com/fakehipaa.crt -P /etc/pki/tls/certs\n",
            "wget https://crosbie-training-materials.s3.amazonaws.com/fakehipaa.key -P /etc/pki/tls/private/\n",
            "wget https://crosbie-training-materials.s3.amazonaws.com/fakehipaa.csr -P /etc/pki/tls/private/\n",
            "wget https://crosbie-training-materials.s3.amazonaws.com/ssl.conf -P /etc/httpd/conf.d/ssl.conf\n",
            "service httpd start\n",
            "chkconfig httpd on\n"
            ]
          ]
        }
      },

        "SecurityGroups": [{
          "Fn::If": [
              "CreateTESTResources",
              {"Ref": "InstanceSecurityGroupTEST"},
              {"Ref": "InstanceSecurityGroupPROD"}
            ]
          }],
        "ImageId": {
          "Fn::FindInMap": [
            "AWSRegionArch2AMI",
            {
              "Ref": "AWS::Region"
            },
            {
              "Fn::FindInMap": [
                "AWSInstanceType2Arch",
                {
                  "Ref": "InstanceType"
                },
                "Arch"
              ]
            }
          ]
        }
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "18f1b173-3283-42c7-8cb8-7c1d41eb6c0f"
        }
      }
    },
    "InstanceSecurityGroupTEST": {
    "Type": "AWS::EC2::SecurityGroup",
    "Condition" : "CreateTESTResources",
    "Properties": {
       "GroupDescription": "Enable access only from secure protocols",
         "SecurityGroupIngress": [
         { "IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : "10.0.0.0/24" },
         { "IpProtocol" : "tcp", "FromPort" : "443", "ToPort" : "443", "CidrIp" : "10.0.0.0/24" },
         { "IpProtocol" : "tcp", "FromPort" : "143", "ToPort" : "143", "CidrIp" : "10.0.0.0/24" },
         { "IpProtocol" : "tcp", "FromPort" : "465", "ToPort" : "465", "CidrIp" : "10.0.0.0/24" },
         { "IpProtocol" : "icmp", "FromPort" : "8", "ToPort" : "-1", "CidrIp" : "10.0.0.0/24" }
         ]
     }},
    "InstanceSecurityGroupPROD": {
    "Type": "AWS::EC2::SecurityGroup",
    "Condition" : "CreatePRODResources",
    "Properties": {
       "GroupDescription": "Enable access only from secure protocols",
         "SecurityGroupIngress": [
         { "IpProtocol" : "tcp", "FromPort" : "443", "ToPort" : "443", "CidrIp" : "0.0.0.0/0" }]
     }}
  },
  "Outputs": {
    "InstanceId": {
      "Description": "InstanceId of the newly created compliant EC2 instance",
      "Value": {
        "Ref": "EC2Instance"
      }
    },
    "AZ": {
      "Description": "Availability Zone of the newly created compliant EC2 instance",
      "Value": {
        "Fn::GetAtt": [
          "EC2Instance",
          "AvailabilityZone"
        ]
      }
    },
    "PublicDNS": {
      "Description": "Public DNSName of the newly created compliant EC2 instance",
      "Value": {
        "Fn::GetAtt": [
          "EC2Instance",
          "PublicDnsName"
        ]
      }
    },
    "PublicIP": {
      "Description": "Public IP address of the newly created compliant EC2 instance",
      "Value": {
        "Fn::GetAtt": [
          "EC2Instance",
          "PublicIp"
        ]
      }
    }
  }
}